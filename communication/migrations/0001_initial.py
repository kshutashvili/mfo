# Generated by Django 2.0.2 on 2018-05-03 12:33

import ckeditor.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название категории')),
                ('name_ru', models.CharField(max_length=128, null=True, verbose_name='Название категории')),
                ('name_ua', models.CharField(max_length=128, null=True, verbose_name='Название категории')),
                ('link', models.CharField(help_text='Используйте ссылку вида /#html_id для блока лэндинга. Остальные ссылки указывать полностью (https://...)', max_length=255, verbose_name='URL-адрес')),
            ],
            options={
                'verbose_name_plural': 'Категории в блоге',
                'verbose_name': 'Категория',
            },
        ),
        migrations.CreateModel(
            name='BlogItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Заголовок')),
                ('title_ru', models.CharField(max_length=128, null=True, verbose_name='Заголовок')),
                ('title_ua', models.CharField(max_length=128, null=True, verbose_name='Заголовок')),
                ('text', ckeditor.fields.RichTextField(verbose_name='Текст статьи')),
                ('text_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Текст статьи')),
                ('text_ua', ckeditor.fields.RichTextField(null=True, verbose_name='Текст статьи')),
                ('image', models.ImageField(upload_to='blog_items', verbose_name='Картинка')),
                ('date', models.DateField(verbose_name='Дата анонса')),
            ],
            options={
                'verbose_name_plural': 'Статьи в блоге',
                'verbose_name': 'Статья',
            },
        ),
        migrations.CreateModel(
            name='CallbackSuccessForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'Форма после успешного заказа звонка',
                'verbose_name': 'Форма',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, null=True, verbose_name='Title страницы')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Title страницы')),
                ('title_ua', models.CharField(max_length=255, null=True, verbose_name='Title страницы')),
                ('meta_title', models.CharField(max_length=255, null=True, verbose_name='Meta title страницы')),
                ('meta_title_ru', models.CharField(max_length=255, null=True, verbose_name='Meta title страницы')),
                ('meta_title_ua', models.CharField(max_length=255, null=True, verbose_name='Meta title страницы')),
                ('meta_description', ckeditor.fields.RichTextField(null=True, verbose_name='Meta description страницы')),
                ('meta_description_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Meta description страницы')),
                ('meta_description_ua', ckeditor.fields.RichTextField(null=True, verbose_name='Meta description страницы')),
                ('address', ckeditor.fields.RichTextField(verbose_name='Адрес')),
                ('address_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Адрес')),
                ('address_ua', ckeditor.fields.RichTextField(null=True, verbose_name='Адрес')),
                ('title_text', ckeditor.fields.RichTextField(verbose_name='Текст вверху')),
                ('title_text_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Текст вверху')),
                ('title_text_ua', ckeditor.fields.RichTextField(null=True, verbose_name='Текст вверху')),
                ('schedule', ckeditor.fields.RichTextField(verbose_name='График')),
                ('schedule_ru', ckeditor.fields.RichTextField(null=True, verbose_name='График')),
                ('schedule_ua', ckeditor.fields.RichTextField(null=True, verbose_name='График')),
                ('footer_text', ckeditor.fields.RichTextField(verbose_name='Текст снизу')),
                ('footer_text_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Текст снизу')),
                ('footer_text_ua', ckeditor.fields.RichTextField(null=True, verbose_name='Текст снизу')),
            ],
            options={
                'verbose_name_plural': 'Контакты',
                'verbose_name': 'Контакты',
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=64, verbose_name='Электронная почта')),
            ],
            options={
                'verbose_name_plural': 'Электронные почты',
                'verbose_name': 'Электронная почта',
            },
        ),
        migrations.CreateModel(
            name='FaqCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
                ('name_ru', models.CharField(max_length=128, null=True, verbose_name='Название')),
                ('name_ua', models.CharField(max_length=128, null=True, verbose_name='Название')),
                ('icon', models.CharField(choices=[('general', 'Общие вопросы'), ('execution', 'Оформление заявки'), ('card', 'Банковская карта'), ('credit', 'Кредитный договор'), ('personal', 'Личный кабинет'), ('credit_manipulation', 'Как погасить / увеличить кредит')], max_length=64, verbose_name='Иконка')),
            ],
            options={
                'verbose_name_plural': 'FAQ категории',
                'verbose_name': 'Категория',
            },
        ),
        migrations.CreateModel(
            name='FaqItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название вопроса')),
                ('name_ru', models.CharField(max_length=255, null=True, verbose_name='Название вопроса')),
                ('name_ua', models.CharField(max_length=255, null=True, verbose_name='Название вопроса')),
                ('link', models.CharField(help_text='Используйте ссылку вида /#html_id для блока лэндинга. Остальные ссылки указывать полностью (https://...)', max_length=255, verbose_name='URL-адрес')),
            ],
            options={
                'verbose_name_plural': 'FAQ вопросы',
                'verbose_name': 'Вопрос',
            },
        ),
        migrations.CreateModel(
            name='FaqPageStatic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, null=True, verbose_name='Title страницы')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Title страницы')),
                ('title_ua', models.CharField(max_length=255, null=True, verbose_name='Title страницы')),
                ('meta_title', models.CharField(max_length=255, null=True, verbose_name='Meta title страницы')),
                ('meta_title_ru', models.CharField(max_length=255, null=True, verbose_name='Meta title страницы')),
                ('meta_title_ua', models.CharField(max_length=255, null=True, verbose_name='Meta title страницы')),
                ('meta_description', ckeditor.fields.RichTextField(null=True, verbose_name='Meta description страницы')),
                ('meta_description_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Meta description страницы')),
                ('meta_description_ua', ckeditor.fields.RichTextField(null=True, verbose_name='Meta description страницы')),
            ],
            options={
                'verbose_name_plural': 'FAQ страница',
                'verbose_name': 'Страница',
            },
        ),
        migrations.CreateModel(
            name='HotLinePhone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=64, verbose_name='Номер телефона')),
                ('schedule_start', models.TimeField(null=True, verbose_name='Время активности, начиная с:')),
                ('schedule_end', models.TimeField(null=True, verbose_name='Время активности, заканчивая в:')),
            ],
            options={
                'verbose_name_plural': 'Горячая линия',
                'verbose_name': 'Горячая линия',
            },
        ),
        migrations.CreateModel(
            name='LastArticles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'Блок последние статьи',
                'verbose_name': 'Последние статьи',
            },
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=32, verbose_name='Номер телефона')),
            ],
            options={
                'verbose_name_plural': 'Номера телефонов',
                'verbose_name': 'Номер телефона',
            },
        ),
        migrations.CreateModel(
            name='QuestionComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата комментария')),
                ('content', models.TextField(max_length=1200, verbose_name='Комментарий')),
                ('is_admin', models.BooleanField(default=False, verbose_name='От администрации')),
            ],
            options={
                'ordering': ['created_at'],
                'verbose_name_plural': 'Комментарии к вопросам пользователя',
                'verbose_name': 'Комментарий к вопросу пользователя',
            },
        ),
        migrations.CreateModel(
            name='QuestionConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='От этого имени будут поститься комментарии к вопросам в ЛК')),
                ('name_ru', models.CharField(max_length=128, null=True, verbose_name='От этого имени будут поститься комментарии к вопросам в ЛК')),
                ('name_ua', models.CharField(max_length=128, null=True, verbose_name='От этого имени будут поститься комментарии к вопросам в ЛК')),
                ('message', models.TextField(max_length=1200, verbose_name='Сообщение, завершающее закрытые вопросы')),
                ('message_ru', models.TextField(max_length=1200, null=True, verbose_name='Сообщение, завершающее закрытые вопросы')),
                ('message_ua', models.TextField(max_length=1200, null=True, verbose_name='Сообщение, завершающее закрытые вопросы')),
            ],
            options={
                'verbose_name_plural': 'Конфигурация ответов в ЛК',
                'verbose_name': 'Конфигурация',
            },
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='clients_photos', verbose_name='Фото клиента')),
                ('name', models.CharField(max_length=128, verbose_name='Имя клиента')),
                ('status', models.CharField(max_length=64, verbose_name='Статус клиента')),
                ('text', models.TextField(max_length=1000, verbose_name='Текст отзыва')),
            ],
            options={
                'verbose_name_plural': 'Отзывы',
                'verbose_name': 'Отзыв',
            },
        ),
        migrations.CreateModel(
            name='Resume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=128, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=128, verbose_name='Фамилия')),
                ('city', models.CharField(max_length=128, verbose_name='Населенный пункт')),
                ('phone', models.CharField(max_length=32, validators=[django.core.validators.RegexValidator(message='Неправильный формат телефона: ', regex='^\\+{0,1}\\d{9,15}$')], verbose_name='Номер телефона')),
                ('email', models.EmailField(max_length=254, verbose_name='Электронная почта')),
                ('file', models.FileField(upload_to='resume_files', verbose_name='Резюме')),
            ],
            options={
                'verbose_name_plural': 'Резюме',
                'verbose_name': 'Резюме',
            },
        ),
        migrations.CreateModel(
            name='SocialNet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.CharField(help_text='Используйте ссылку вида /#html_id для блока лэндинга. Остальные ссылки указывать полностью (https://...)', max_length=255, verbose_name='URL-адрес')),
            ],
            options={
                'verbose_name_plural': 'Социальные сети',
                'verbose_name': 'Социальная сеть',
            },
        ),
        migrations.CreateModel(
            name='SocialNetUnderHeader',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.CharField(max_length=255, verbose_name='URL-адрес')),
                ('image', models.CharField(choices=[('twitter', 'Twitter'), ('pinterest', 'Pinterest'), ('linkedin', 'LinkedIn'), ('facebook', 'Facebook')], max_length=25, verbose_name='Иконка')),
            ],
            options={
                'verbose_name_plural': 'Социальные сети под хедером',
                'verbose_name': 'Социальная сеть',
            },
        ),
        migrations.CreateModel(
            name='SuccessFormStatic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Заголовок формы')),
                ('title_ru', models.CharField(max_length=128, null=True, verbose_name='Заголовок формы')),
                ('title_ua', models.CharField(max_length=128, null=True, verbose_name='Заголовок формы')),
                ('text', models.TextField(max_length=400, verbose_name='Текст формы')),
                ('text_ru', models.TextField(max_length=400, null=True, verbose_name='Текст формы')),
                ('text_ua', models.TextField(max_length=400, null=True, verbose_name='Текст формы')),
                ('extra_text', models.CharField(max_length=255, verbose_name='Дополнительный текст в левом нижнем углу')),
                ('extra_text_ru', models.CharField(max_length=255, null=True, verbose_name='Дополнительный текст в левом нижнем углу')),
                ('extra_text_ua', models.CharField(max_length=255, null=True, verbose_name='Дополнительный текст в левом нижнем углу')),
            ],
            options={
                'verbose_name_plural': 'Формы успешно выполненного действия',
                'verbose_name': 'Форма успешно выполненного действия',
            },
        ),
        migrations.CreateModel(
            name='UserExistMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'Форма, если пользователь уже зарегестрирован',
                'verbose_name': 'Форма',
            },
        ),
        migrations.CreateModel(
            name='UserQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_closed', models.BooleanField(default=False, verbose_name='Вопрос закрыт')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания вопроса')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления вопроса')),
                ('content', models.TextField(max_length=1200, verbose_name='Вопрос')),
                ('file', models.FileField(blank=True, null=True, upload_to='questions_files', verbose_name='Прикрепленный файл')),
                ('is_read', models.CharField(default='read', max_length=10, verbose_name='Прочитан')),
                ('comments', models.ManyToManyField(blank=True, to='communication.QuestionComment', verbose_name='Комментарии')),
                ('end_message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='end', to='communication.QuestionComment', verbose_name='Завершающий ответ')),
            ],
            options={
                'ordering': ['-updated_at'],
                'verbose_name_plural': 'Вопросы пользователей',
                'verbose_name': 'Вопрос пользователя',
            },
        ),
    ]
