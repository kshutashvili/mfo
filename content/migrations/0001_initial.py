# Generated by Django 2.0.2 on 2018-05-03 12:33

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('credit', '0001_initial'),
        ('communication', '0001_initial'),
        ('department', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutUsStatic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_top', models.CharField(max_length=255, null=True, verbose_name='Title страницы')),
                ('title_top_ru', models.CharField(max_length=255, null=True, verbose_name='Title страницы')),
                ('title_top_ua', models.CharField(max_length=255, null=True, verbose_name='Title страницы')),
                ('meta_title', models.CharField(max_length=255, null=True, verbose_name='Meta title страницы')),
                ('meta_title_ru', models.CharField(max_length=255, null=True, verbose_name='Meta title страницы')),
                ('meta_title_ua', models.CharField(max_length=255, null=True, verbose_name='Meta title страницы')),
                ('meta_description', ckeditor.fields.RichTextField(null=True, verbose_name='Meta description страницы')),
                ('meta_description_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Meta description страницы')),
                ('meta_description_ua', ckeditor.fields.RichTextField(null=True, verbose_name='Meta description страницы')),
                ('title', models.CharField(max_length=64, verbose_name='Заголовок')),
                ('title_ru', models.CharField(max_length=64, null=True, verbose_name='Заголовок')),
                ('title_ua', models.CharField(max_length=64, null=True, verbose_name='Заголовок')),
                ('subtitle', models.CharField(max_length=64, verbose_name='Подзаголовок')),
                ('subtitle_ru', models.CharField(max_length=64, null=True, verbose_name='Подзаголовок')),
                ('subtitle_ua', models.CharField(max_length=64, null=True, verbose_name='Подзаголовок')),
                ('text', models.TextField(verbose_name='Текст')),
                ('text_ru', models.TextField(null=True, verbose_name='Текст')),
                ('text_ua', models.TextField(null=True, verbose_name='Текст')),
                ('link', models.CharField(help_text='Используйте ссылку вида /#html_id для блока лэндинга. Остальные ссылки указывать полностью (https://...)', max_length=255, verbose_name='URL-адрес')),
                ('image', models.ImageField(upload_to='about_us', verbose_name='Картинка')),
                ('middle_title', models.CharField(max_length=128, verbose_name='Заголовок на середине страницы')),
                ('middle_title_ru', models.CharField(max_length=128, null=True, verbose_name='Заголовок на середине страницы')),
                ('middle_title_ua', models.CharField(max_length=128, null=True, verbose_name='Заголовок на середине страницы')),
                ('middle_text', models.TextField(verbose_name='Текст на середине страницы')),
                ('middle_text_ru', models.TextField(null=True, verbose_name='Текст на середине страницы')),
                ('middle_text_ua', models.TextField(null=True, verbose_name='Текст на середине страницы')),
                ('important_title', models.CharField(max_length=128, verbose_name='Заголовок важных аспектов')),
                ('important_title_ru', models.CharField(max_length=128, null=True, verbose_name='Заголовок важных аспектов')),
                ('important_title_ua', models.CharField(max_length=128, null=True, verbose_name='Заголовок важных аспектов')),
            ],
            options={
                'verbose_name_plural': 'Страница о нас',
                'verbose_name': 'Страница о нас',
            },
        ),
        migrations.CreateModel(
            name='Advantage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', ckeditor.fields.RichTextField(verbose_name='Текст')),
                ('text_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Текст')),
                ('text_ua', ckeditor.fields.RichTextField(null=True, verbose_name='Текст')),
                ('image', models.FileField(upload_to='advantages', verbose_name='Иконка')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
            ],
            options={
                'ordering': ['order'],
                'verbose_name_plural': 'Преимущества',
                'verbose_name': 'Преимущество',
            },
        ),
        migrations.CreateModel(
            name='AdvantageStatic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Заголовок')),
                ('title_ru', models.CharField(max_length=128, null=True, verbose_name='Заголовок')),
                ('title_ua', models.CharField(max_length=128, null=True, verbose_name='Заголовок')),
                ('text', models.TextField(verbose_name='небольшой текст')),
                ('text_ru', models.TextField(null=True, verbose_name='небольшой текст')),
                ('text_ua', models.TextField(null=True, verbose_name='небольшой текст')),
                ('advantages', models.ManyToManyField(to='content.Advantage', verbose_name='Преимущества')),
            ],
            options={
                'verbose_name_plural': 'Блок преимущества на главной',
                'verbose_name': 'Блок',
            },
        ),
        migrations.CreateModel(
            name='CloseCredit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Заголовок')),
                ('title_ru', models.CharField(max_length=128, null=True, verbose_name='Заголовок')),
                ('title_ua', models.CharField(max_length=128, null=True, verbose_name='Заголовок')),
                ('text', models.TextField(verbose_name='Текст')),
                ('text_ru', models.TextField(null=True, verbose_name='Текст')),
                ('text_ua', models.TextField(null=True, verbose_name='Текст')),
                ('icon_class', models.CharField(choices=[('svg-phone', 'Терминал'), ('svg-tablet', 'Личный кабинет'), ('svg-house', 'Банк')], max_length=128, verbose_name='Иконка')),
                ('link', models.CharField(help_text='Используйте ссылку вида /#html_id для блока лэндинга. Остальные ссылки указывать полностью (https://...)', max_length=255, verbose_name='URL-адрес')),
            ],
            options={
                'verbose_name_plural': 'Способы закрытия кредита',
                'verbose_name': 'Способ закрытия кредита',
            },
        ),
        migrations.CreateModel(
            name='CloseCreditStatic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Заголовок')),
                ('title_ru', models.CharField(max_length=128, null=True, verbose_name='Заголовок [ru]')),
                ('title_ua', models.CharField(max_length=128, null=True, verbose_name='Заголовок [ua]')),
                ('close_credits', models.ManyToManyField(to='content.CloseCredit', verbose_name='Варианты закрытия')),
            ],
            options={
                'verbose_name_plural': 'Блок закрытия кредита на главной',
                'verbose_name': 'Блок',
            },
        ),
        migrations.CreateModel(
            name='CreditInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Заголовок')),
                ('title_ru', models.CharField(max_length=128, null=True, verbose_name='Заголовок')),
                ('title_ua', models.CharField(max_length=128, null=True, verbose_name='Заголовок')),
                ('text', ckeditor.fields.RichTextField(verbose_name='Текст')),
                ('text_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Текст')),
                ('text_ua', ckeditor.fields.RichTextField(null=True, verbose_name='Текст')),
            ],
            options={
                'verbose_name_plural': 'Информация по кредитам',
                'verbose_name': 'Информация по кредитам',
            },
        ),
        migrations.CreateModel(
            name='CreditInformationBlockStatic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', ckeditor.fields.RichTextField(verbose_name='Текст')),
                ('text_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Текст')),
                ('text_ua', ckeditor.fields.RichTextField(null=True, verbose_name='Текст')),
                ('information_items', models.ManyToManyField(to='content.CreditInformation', verbose_name='Блоки информации')),
            ],
            options={
                'verbose_name_plural': 'Блок информации по кредитам на главной над футером',
                'verbose_name': 'Блок',
            },
        ),
        migrations.CreateModel(
            name='CreditRateStatic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Заголовок')),
                ('title_ru', models.CharField(max_length=128, null=True, verbose_name='Заголовок')),
                ('title_ua', models.CharField(max_length=128, null=True, verbose_name='Заголовок')),
                ('text', models.TextField(verbose_name='Небольшой текст')),
                ('text_ru', models.TextField(null=True, verbose_name='Небольшой текст')),
                ('text_ua', models.TextField(null=True, verbose_name='Небольшой текст')),
                ('credit_rates', models.ManyToManyField(to='credit.CreditRate', verbose_name='Кредитные тарифы')),
            ],
            options={
                'verbose_name_plural': 'Блок кредитные тарифы на главной',
                'verbose_name': 'Блок',
            },
        ),
        migrations.CreateModel(
            name='DiscountStatic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', ckeditor.fields.RichTextField(verbose_name='Заголовок')),
                ('title_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Заголовок')),
                ('title_ua', ckeditor.fields.RichTextField(null=True, verbose_name='Заголовок')),
                ('image', models.ImageField(null=True, upload_to='discount', verbose_name='Картинка заднего фона')),
                ('text', ckeditor.fields.RichTextField(verbose_name='Текст')),
                ('text_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Текст')),
                ('text_ua', ckeditor.fields.RichTextField(null=True, verbose_name='Текст')),
                ('icon', models.FileField(null=True, upload_to='discount_icons', verbose_name='Иконки')),
                ('link', models.CharField(help_text='Используйте ссылку вида /#html_id для блока лэндинга. Остальные ссылки указывать полностью (https://...)', max_length=255, verbose_name='URL-адрес')),
            ],
            options={
                'verbose_name_plural': 'Блок скидка на главной',
                'verbose_name': 'Блок',
            },
        ),
        migrations.CreateModel(
            name='GetCredit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Заголовок')),
                ('title_ru', models.CharField(max_length=128, null=True, verbose_name='Заголовок')),
                ('title_ua', models.CharField(max_length=128, null=True, verbose_name='Заголовок')),
                ('text', models.TextField(verbose_name='Текст')),
                ('text_ru', models.TextField(null=True, verbose_name='Текст')),
                ('text_ua', models.TextField(null=True, verbose_name='Текст')),
            ],
            options={
                'verbose_name_plural': 'Блоки "Как получить кредит на главной"',
                'verbose_name': 'Блок',
            },
        ),
        migrations.CreateModel(
            name='ImportantAspect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, verbose_name='Заголовок')),
                ('title_ru', models.CharField(max_length=64, null=True, verbose_name='Заголовок')),
                ('title_ua', models.CharField(max_length=64, null=True, verbose_name='Заголовок')),
                ('text', models.TextField(verbose_name='Текст')),
                ('text_ru', models.TextField(null=True, verbose_name='Текст')),
                ('text_ua', models.TextField(null=True, verbose_name='Текст')),
                ('image', models.FileField(null=True, upload_to='important_aspect', verbose_name='Картинка')),
            ],
            options={
                'verbose_name_plural': 'Важные аспекты',
                'verbose_name': 'Аспект',
            },
        ),
        migrations.CreateModel(
            name='IndexPageStatic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departments_title', models.CharField(max_length=128, null=True, verbose_name='Заголовок над отделениями')),
                ('departments_title_ru', models.CharField(max_length=128, null=True, verbose_name='Заголовок над отделениями [ru]')),
                ('departments_title_ua', models.CharField(max_length=128, null=True, verbose_name='Заголовок над отделениями [ua]')),
                ('advantage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.AdvantageStatic', verbose_name='Блок преимущества')),
                ('credit_block', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='content.CreditRateStatic', verbose_name='Блок кредитные тарифы')),
                ('credit_close', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='content.CloseCreditStatic', verbose_name='Блок как закрыть кредит')),
                ('credit_rate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='credit.CreditRate', verbose_name='Кредитный тариф калькулятора')),
                ('credit_take', models.ManyToManyField(to='content.GetCredit', verbose_name='Блок как получить кредит')),
                ('departments', models.ManyToManyField(to='department.Department', verbose_name='Отделения')),
                ('discount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='content.DiscountStatic', verbose_name='Блок акция')),
                ('responses', models.ManyToManyField(to='communication.Response', verbose_name='Блок отзывы')),
            ],
            options={
                'verbose_name_plural': 'Страница Партнерский лэндинг',
                'verbose_name': 'Страница Партнерский лэндинг',
            },
        ),
        migrations.CreateModel(
            name='JobStaticPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='job_page', verbose_name='Картинка')),
                ('text', ckeditor.fields.RichTextField(verbose_name='Текст')),
                ('text_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Текст')),
                ('text_ua', ckeditor.fields.RichTextField(null=True, verbose_name='Текст')),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='communication.Email', verbose_name='Контактная почта')),
                ('phone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='communication.PhoneNumber', verbose_name='Контактный телефон')),
                ('success_form', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='communication.SuccessFormStatic', verbose_name='Форма при успешной отправке резюме')),
            ],
            options={
                'verbose_name_plural': 'Статическая часть страницы Вакансии',
                'verbose_name': 'Статический блок',
            },
        ),
        migrations.CreateModel(
            name='MainPageStatic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, null=True, verbose_name='Title страницы')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Title страницы [ru]')),
                ('title_ua', models.CharField(max_length=255, null=True, verbose_name='Title страницы [ua]')),
                ('meta_title', models.CharField(max_length=255, null=True, verbose_name='Meta title страницы')),
                ('meta_title_ru', models.CharField(max_length=255, null=True, verbose_name='Meta title страницы [ru]')),
                ('meta_title_ua', models.CharField(max_length=255, null=True, verbose_name='Meta title страницы [ua]')),
                ('meta_description', ckeditor.fields.RichTextField(null=True, verbose_name='Meta description страницы')),
                ('meta_description_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Meta description страницы [ru]')),
                ('meta_description_ua', ckeditor.fields.RichTextField(null=True, verbose_name='Meta description страницы [ua]')),
                ('departments_title', models.CharField(max_length=128, null=True, verbose_name='Заголовок над отделениями')),
                ('departments_title_ru', models.CharField(max_length=128, null=True, verbose_name='Заголовок над отделениями [ru]')),
                ('departments_title_ua', models.CharField(max_length=128, null=True, verbose_name='Заголовок над отделениями [ua]')),
                ('copyright', ckeditor.fields.RichTextField(null=True, verbose_name='Копирайт в футере')),
                ('copyright_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Копирайт в футере [ru]')),
                ('copyright_ua', ckeditor.fields.RichTextField(null=True, verbose_name='Копирайт в футере [ua]')),
                ('advantage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.AdvantageStatic', verbose_name='Блок преимущества')),
                ('credit_block', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='content.CreditRateStatic', verbose_name='Блок кредитные тарифы')),
                ('credit_close', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='content.CloseCreditStatic', verbose_name='Блок как закрыть кредит')),
                ('credit_information', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='content.CreditInformationBlockStatic', verbose_name='Блок информации о кредитах')),
                ('credit_take', models.ManyToManyField(to='content.GetCredit', verbose_name='Блок как получить кредит')),
                ('credits_up', models.ManyToManyField(to='credit.CreditRateUp', verbose_name='Кредитные тарифы вверху страницы')),
                ('departments', models.ManyToManyField(to='department.Department', verbose_name='Отделения')),
                ('discount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='content.DiscountStatic', verbose_name='Блок акция')),
            ],
            options={
                'verbose_name_plural': 'Главная страница',
                'verbose_name': 'Главная страница',
            },
        ),
        migrations.CreateModel(
            name='MainPageTopBlockStatic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Первая строка заголовка')),
                ('title_ru', models.CharField(max_length=128, null=True, verbose_name='Первая строка заголовка [ru]')),
                ('title_ua', models.CharField(max_length=128, null=True, verbose_name='Первая строка заголовка [ua]')),
                ('subtitle', models.CharField(max_length=128, verbose_name='Вторая строка заголовка')),
                ('subtitle_ru', models.CharField(max_length=128, null=True, verbose_name='Вторая строка заголовка [ru]')),
                ('subtitle_ua', models.CharField(max_length=128, null=True, verbose_name='Вторая строка заголовка [ua]')),
                ('footer', models.CharField(max_length=128, verbose_name='Подзаголовок')),
                ('footer_ru', models.CharField(max_length=128, null=True, verbose_name='Подзаголовок [ru]')),
                ('footer_ua', models.CharField(max_length=128, null=True, verbose_name='Подзаголовок [ua]')),
                ('image', models.ImageField(upload_to='main_top_block', verbose_name='Картинка на заднем фоне')),
            ],
            options={
                'verbose_name_plural': 'Блок вверху главной страницы',
                'verbose_name': 'Блок',
            },
        ),
        migrations.CreateModel(
            name='MenuAboutItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название пункта')),
                ('name_ru', models.CharField(max_length=128, null=True, verbose_name='Название пункта')),
                ('name_ua', models.CharField(max_length=128, null=True, verbose_name='Название пункта')),
                ('link', models.CharField(help_text='Используйте ссылку вида #html_id для блока лэндинга. Остальные ссылки указывать полностью (https://...)', max_length=255, verbose_name='URL-адрес')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
            ],
            options={
                'ordering': ['order'],
                'verbose_name_plural': 'Пункты меню на странице "О нас"',
                'verbose_name': 'Пункт меню',
            },
        ),
        migrations.CreateModel(
            name='MenuFooterBlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название блока')),
                ('name_ru', models.CharField(max_length=128, null=True, verbose_name='Название блока')),
                ('name_ua', models.CharField(max_length=128, null=True, verbose_name='Название блока')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок отображения')),
            ],
            options={
                'verbose_name_plural': 'Блоки меню в футере',
                'verbose_name': 'Блок',
            },
        ),
        migrations.CreateModel(
            name='MenuFooterItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название пункта')),
                ('name_ru', models.CharField(max_length=128, null=True, verbose_name='Название пункта')),
                ('name_ua', models.CharField(max_length=128, null=True, verbose_name='Название пункта')),
                ('link', models.CharField(help_text='Используйте ссылку вида #html_id для блока лэндинга. Остальные ссылки указывать полностью (https://...)', max_length=255, verbose_name='URL-адрес')),
            ],
            options={
                'verbose_name_plural': 'Пункты меню в футере',
                'verbose_name': 'Пункт меню',
            },
        ),
        migrations.CreateModel(
            name='MenuHeaderBlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'Блок меню в хедере',
                'verbose_name': 'Блок',
            },
        ),
        migrations.CreateModel(
            name='MenuHeaderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название пункта')),
                ('name_ru', models.CharField(max_length=128, null=True, verbose_name='Название пункта')),
                ('name_ua', models.CharField(max_length=128, null=True, verbose_name='Название пункта')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('link', models.CharField(help_text='Используйте ссылку вида #html_id для блока лэндинга. Остальные ссылки указывать полностью (https://...)', max_length=255, verbose_name='URL-адрес')),
            ],
            options={
                'ordering': ['order'],
                'verbose_name_plural': 'Пункты меню в хедере',
                'verbose_name': 'Пункт меню',
            },
        ),
        migrations.CreateModel(
            name='SecurityItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', ckeditor.fields.RichTextField(verbose_name='Текст')),
                ('text_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Текст')),
                ('text_ua', ckeditor.fields.RichTextField(null=True, verbose_name='Текст')),
                ('icon_class', models.CharField(choices=[('handshake', 'Рукопожатие'), ('shield', 'Щит'), ('wax', 'Достижение')], max_length=128, verbose_name='Иконка')),
            ],
            options={
                'verbose_name_plural': 'Элементы безопасности на главной',
                'verbose_name': 'Элемент безопасности',
            },
        ),
        migrations.CreateModel(
            name='SecurityStatic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image1', models.FileField(upload_to='secutiry_block', verbose_name='Картинка первого партнера')),
                ('image2', models.FileField(upload_to='secutiry_block', verbose_name='Картинка второго партнера')),
                ('image3', models.FileField(upload_to='secutiry_block', verbose_name='Картинка третьего партнера')),
                ('image4', models.FileField(upload_to='secutiry_block', verbose_name='Картинка четвертого партнера')),
                ('image5', models.FileField(upload_to='secutiry_block', verbose_name='Картинка пятого партнера')),
                ('security_items', models.ManyToManyField(to='content.SecurityItem', verbose_name='Элементы безопасности')),
            ],
            options={
                'verbose_name_plural': 'Блок о безопасности на главной',
                'verbose_name': 'Блок',
            },
        ),
        migrations.CreateModel(
            name='Spoiler',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(max_length=64, verbose_name='Тема спойлера')),
                ('topic_ru', models.CharField(max_length=64, null=True, verbose_name='Тема спойлера')),
                ('topic_ua', models.CharField(max_length=64, null=True, verbose_name='Тема спойлера')),
                ('content_left', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Текст левой колонки')),
                ('content_left_ru', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Текст левой колонки')),
                ('content_left_ua', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Текст левой колонки')),
                ('content_right', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Текст правой колонки')),
                ('content_right_ru', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Текст правой колонки')),
                ('content_right_ua', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Текст правой колонки')),
                ('file', models.FileField(blank=True, null=True, upload_to='spoiler_files', verbose_name='Файл')),
            ],
            options={
                'verbose_name_plural': 'Спойлеры',
                'verbose_name': 'Спойлер',
            },
        ),
        migrations.CreateModel(
            name='StaticPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Заголовок')),
                ('title_ru', models.CharField(max_length=128, null=True, verbose_name='Заголовок')),
                ('title_ua', models.CharField(max_length=128, null=True, verbose_name='Заголовок')),
                ('link', models.CharField(help_text='Используйте ссылки вида: url', max_length=255, verbose_name='URL-адрес')),
                ('spoilers', models.ManyToManyField(to='content.Spoiler', verbose_name='Спойлеры')),
            ],
            options={
                'verbose_name_plural': 'Статические страницы со спойлерами',
                'verbose_name': 'Статическая страница',
            },
        ),
        migrations.CreateModel(
            name='StaticPageDefault',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Заголовок')),
                ('title_ru', models.CharField(max_length=128, null=True, verbose_name='Заголовок')),
                ('title_ua', models.CharField(max_length=128, null=True, verbose_name='Заголовок')),
                ('image', models.ImageField(upload_to='static_page_default', verbose_name='Картинка')),
                ('text', ckeditor.fields.RichTextField(verbose_name='Текст')),
                ('text_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Текст')),
                ('text_ua', ckeditor.fields.RichTextField(null=True, verbose_name='Текст')),
                ('link', models.CharField(help_text='Используйте ссылки вида: url', max_length=255, verbose_name='URL-адрес')),
            ],
            options={
                'verbose_name_plural': 'Статические страницы',
                'verbose_name': 'Статическая страница',
            },
        ),
        migrations.AddField(
            model_name='menuheaderblock',
            name='items',
            field=models.ManyToManyField(to='content.MenuHeaderItem', verbose_name='Пункты'),
        ),
        migrations.AddField(
            model_name='menufooterblock',
            name='items',
            field=models.ManyToManyField(to='content.MenuFooterItem', verbose_name='Пункты блока'),
        ),
        migrations.AddField(
            model_name='mainpagestatic',
            name='menu_footer',
            field=models.ManyToManyField(to='content.MenuFooterBlock', verbose_name='Меню в футере'),
        ),
        migrations.AddField(
            model_name='mainpagestatic',
            name='responses',
            field=models.ManyToManyField(to='communication.Response', verbose_name='Блок отзывы'),
        ),
        migrations.AddField(
            model_name='mainpagestatic',
            name='security',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='content.SecurityStatic', verbose_name='Блок о параметрах защиты'),
        ),
        migrations.AddField(
            model_name='mainpagestatic',
            name='social_nets',
            field=models.ManyToManyField(to='communication.SocialNet', verbose_name='Социальные сети в футере'),
        ),
        migrations.AddField(
            model_name='mainpagestatic',
            name='top_block',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.MainPageTopBlockStatic', verbose_name='Верхний блок страницы'),
        ),
        migrations.AddField(
            model_name='indexpagestatic',
            name='security',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='content.SecurityStatic', verbose_name='Блок о параметрах защиты'),
        ),
        migrations.AddField(
            model_name='aboutusstatic',
            name='advantages',
            field=models.ManyToManyField(to='content.Advantage', verbose_name='Преимущества'),
        ),
        migrations.AddField(
            model_name='aboutusstatic',
            name='important_aspects',
            field=models.ManyToManyField(to='content.ImportantAspect', verbose_name='Важные аспекты'),
        ),
        migrations.AddField(
            model_name='aboutusstatic',
            name='responses',
            field=models.ManyToManyField(to='communication.Response', verbose_name='Отзывы'),
        ),
    ]
